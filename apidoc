#!/usr/bin/env php
<?php
/**
 * Socialveo API documentation generator
 *
 * @link        http://www.yiiframework.com/
 * @copyright   Copyright (c) 2008 Yii Software LLC
 * @license     http://www.yiiframework.com/license/
 *
 * @link        https://socialveo.com Socialveo
 * @copyright   Copyright (C) 2017 Socialveo Sagl - All Rights Reserved
 * @license     Proprietary Software Socialveo (C) 2017, Socialveo Sagl {@link https://socialveo.com/legal Socialveo Legal Policies}
 */

defined('YII_DEBUG') or define('YII_DEBUG', true);

define('PHALCON_VERSION', \Phalcon\Version::get());
define('PHALCON_VERSION_MAJOR', explode('.', PHALCON_VERSION)[0]);
define('PHALCON_VERSION_MINOR', explode('.', PHALCON_VERSION)[1]);
define('PHALCON_TAG', (PHALCON_VERSION_MAJOR == 2 ? 'phalcon-v' : 'v') . PHALCON_VERSION);
define('PHALCON_API_URI', 'https://github.com/phalcon/cphalcon/blob/' . PHALCON_TAG . '/');

$composerAutoload = [
    __DIR__ . '/vendor/autoload.php', // standalone with "composer install" run
    __DIR__ . '/../../autoload.php', // script is installed as a composer binary
    __DIR__ . '/../../../../autoload.php', // script is run from yii2-dev/extensions
];
$vendorPath = null;
foreach ($composerAutoload as $autoload) {
    if (file_exists($autoload)) {
        require($autoload);
        $vendorPath = dirname($autoload);
        break;
    }
}

try {
    require __DIR__ . '/vendor/socialveo/socialveo/socialveo/console.php';
} catch (\Exception $e) {
}

$yiiDirs = [
    __DIR__ . '/../../framework', // in yii2-dev repo
    __DIR__ . '/vendor/yiisoft/yii2', // standalone with "composer install" run
    __DIR__ . '/../../yiisoft/yii2', // script is installed as a composer binary
];
foreach ($yiiDirs as $dir) {
    if (file_exists($dir . '/Yii.php')) {
        require($dir . '/Yii.php');
        break;
    }
}

Yii::setAlias('@yii/apidoc', __DIR__);

$application = new yii\console\Application([
    'id'                  => 'yii2-apidoc',
    'basePath'            => __DIR__,
    'enableCoreCommands'  => false,
    'controllerNamespace' => 'yii\\apidoc\\commands',
]);
if ($vendorPath !== null) {
    $application->setVendorPath($vendorPath);
}

Yii::setAlias('@yii/apidoc', __DIR__);

$exitCode = $application->run();

exit($exitCode);
